##
# Scenario specific settings to kick off the demo
# ----------------------------------
scenario.name=message-e2e-enrich
scenario.description=Simple end-to-end message processing including a producer, a consumer, and a function to enrich each message

##
# The list of the example applications to be included in this demo
# ----------------------------------
scenario.app.ids=native_producer_full_config,native_consumer_full_config,add-metadata
# The specific parameters for each included application
scenario.app.param.native_producer_full_config=-numMsg 10 -topic public/default/t1 -connFile appconf/client.conf -srcWrkldFile /tmp/raw_data_iot_telemetry.csv
scenario.app.param.native_consumer_full_config=-numMsg 10 -topic public/default/t2 -connFile appconf/client.conf -sbn mysub
scenario.app.param.add-metadata=tenant:public namespace:default inputs:public/default/t1 output:public/default/t2 autoAck:true


##
# Infrastructure mode
# - astra         : use Astra Streaming as the underlying infrastrucutre
# - luna_existing : use an existing Luna Streaming cluster as the underlying infrastructure
# - luna_new      : create a new K8s cluster and a Luna Streaming cluster as the underlying infrastructure
# ----------------------------------
# scenario.infra_mode=astra
# scenario.infra_mode=luna_existing
scenario.infra_mode=luna_new

# The file location of `client.conf`
# - by default it's under '<scenarios>/<scenario_name>/appconf' if not specified
# - for 'luna_new' this will be auto-generated under the default location
# - for 'astra' and 'luna_existing', you can specify a custom location
#
# NOTE: regarding JWT token, this expects in `client.conf` file, it is provided as the
#       format of "token:<token_string>" instead of "file:<file_path>".
#       This can be a TBD task!
#
scenario.clientconf.location=

# Whether to upgrade t Pulsar cluster (only relevant when infra_mode is 'luna_new')
# - true : upgrade
# - false: don't upgrade 
upgrade.existing.pulsar=false